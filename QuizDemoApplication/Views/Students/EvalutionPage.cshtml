@model QuizDemoApplication.Models.QuestionModel
@{
    /**/

    ViewBag.Title = "EvalutionPage";
    var totalQuestino = Model.TotalQuestionInSet;
}
<h2>EvalutionPage</h2>
@Html.Raw(Model.Question)
<div class="row">
    <div class="col-lg-10">
        <div class="question-no">Questio No:@Model.QuestionNumber</div>
        <div> Time Remaining :<span id="minRemaining"></span>:<span id="secRemaining"></span></div>
    </div>
</div>
@using (Html.BeginForm("PostAnswer", "Students", FormMethod.Post, new { id = "form" }))
{
    <input type="hidden" name="Direction" value="forward" />
    <input type="hidden" name="Token" value="@(Session["TOKEN"])" />
    <input type="hidden" name="TestId" value="@(Model.TestId)" />
    <input type="hidden" name="QuestionId" value="@(Model.QuestionNumber)" />
    <div class="row">
        <div class="col-lg-10">
            <table>
                <tr>
                    <td><a href="javascript:void(0);" class="btn btn-primary" onclick="saveBackWard(this);"> << Save and Previouse</a></td>
                    <td><a href="@Url.Action("EvalutionPage",new{token=Session["TOKEN"],tid=Session["TESTID"],qno=(Model.QuestionNumber)})"></a></td>
                    @for (int i = 0; i < Model.TotalQuestionInSet; i++)
                    {
                        <td>
                            <a href="@Url.Action("EvalutionPage", "Students", new {token = Session["TOKEN"], qno = (i + 1)})">(@i+1)</a>
                        </td>
                    }
                    <td><a href="@Url.Action("EvalutionPage", new {token = Session["TOKEN"], tid = Session["TESTID"], qno = (Model.QuestionNumber)})"></a></td>
                    <td><a href="javascript:void(0);" class="btn btn-primary" onclick="saveFowared(this);"> >> Save and Next</a></td>
                </tr>
            </table>
        </div>
    </div>
    <div class="row">
        <div class="col-lg-10">
            <p>
                <br />
                @Html.Raw(Model.Question ?? "")
            </p>
            @switch (Model.QuestionType)
            {
                case "RADIO":
                    <div class="prelude">
                        Chosse the Correct the Answer
                    </div>
                    <ul class="js_choices">
                        @for (int i = 0; i < Model.Options.Count; i++)
                        {
                            <li>
                                <input type="hidden" name="UserChoices[@i].choiceId" value="@(Model.Options[i].ChoiceId)" />
                                <input name="UserChoices[@i].IsChecked" type="radio" @(!string.IsNullOrEmpty(Model.Options[i].Answer) ?) />@(Model.Options[i].Lable)
                                <span class="code">@Html.Raw(Model.Options[i].Lable.Replace("[", "&gt;").Replace("]", "&gt;"))</span>
                                <br />
                            </li>

                        }
                    </ul>
                    <input type="hidden" name="Answer" />
                    break;
                case "TEXT":
                    <div>Write Your Thoughts</div>
                    <div>
                        <p>
                            <input type="hidden" name="UserChoices[i].ChoiceId" value="@Model.Options[0].ChoiceId" />
                            <textarea name="Answer" class="form-control">@(Model.Options[0].Answer)</textarea>
                        </p>
                    </div>
                    break;
            }
        </div>
        }
    </div>
}
<script>
    function saveFowared(sender) {
        $('#Direction').val('forwared');
        document.getElementById('form').submit();

    }
    function saveBackWard(sender) {
        $('#Direction').val('backward');
        document.getElementById('form').submit();

    }

</script>

@*<div class="row">


        <div class="row">
        <p>
            <br />
            @Html.Raw(Model.Question ?? "")
        </p>
    </div>
    <br />
    <br />




            @for (int i = 0; i < Model.Options.Count; i++)
            {
                @Html.RadioButtonFor(x => Model.Options[i], "checked")
                ;
            }
                @if (Model.QuestionType == "Radio")
                {
                    for (int i = 0; i < Model.Options.Count; i++)
                    {
                    <input type="hidden" name="UserChoices[@i].choiceId" value="@(Model.Options[i].ChoiceId)"/>
                    <input name="UserChoices[@i].IsChecked" type="radio"/>@(Model.Options[i].Lable)
                    <br/>
                        }
                }
            else if (Model.QuestionType == "Multiple")
            {
                foreach (var optionsModel in Model.Options)
                {
                    <input type="checkbox"/>@(optionsModel.Lable)
                    <br/>
                }
            }
            else if (Model.QuestionType == "TEXT")
            {
                <textarea>This is a Text Area</textarea>
            }
            }
        </div>*@
